import java.util.Scanner;

public class Main {
    // Функция для вычисления возведения числа в степень по модулю
    static int modPow(int base, int exp, int mod) {
        int result = 1; // Инициализация результата
        base %= mod; // Получение остатка от деления базы на модуль
        while (exp > 0) { // Цикл, выполняющийся, пока показатель степени больше нуля
            if (exp % 2 == 1) { // Проверка на нечетность показателя степени
                result = (result * base) % mod; // Обновление результата
            }
            base = (base * base) % mod; // Обновление базы
            exp /= 2; // Уменьшение показателя степени в два раза
        }
        return result; // Возврат результата
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Шаг 1: Генерация общих параметров
        System.out.print("Введите простое число p: "); // Вывод на экран запроса ввода простого числа p
        int p = scanner.nextInt(); // Ввод значения простого числа p
        System.out.print("Введите примитивный корень по модулю p (g): "); // Вывод на экран запроса ввода примитивного корня g
        int g = scanner.nextInt(); // Ввод значения примитивного корня g

        // Шаг 2: Генерация секретных ключей
        System.out.print("Alice: Введите свой секретный ключ a: "); // Вывод на экран запроса ввода секретного ключа Alice
        int a = scanner.nextInt(); // Ввод значения секретного ключа Alice
        System.out.print("Bob: Введите свой секретный ключ b: "); // Вывод на экран запроса ввода секретного ключа Bob
        int b = scanner.nextInt(); // Ввод значения секретного ключа Bob

        // Шаг 3: Вычисление открытых ключей
        int A = modPow(g, a, p); // Вычисление открытого ключа Alice
        int B = modPow(g, b, p); // Вычисление открытого ключа Bob

        // Шаг 4: Обмен и вычисление общего секретного ключа
        int secretKeyA = modPow(B, a, p); // Вычисление общего секретного ключа Alice
        int secretKeyB = modPow(A, b, p); // Вычисление общего секретного ключа Bob

        // Проверка совпадения общих секретных ключей
        if (secretKeyA == secretKeyB) { // Проверка совпадения общих секретных ключей Alice и Bob
            System.out.println("Alice и Bob согласовали общий секретный ключ: " + secretKeyA); // Вывод сообщения о согласовании общего секретного ключа
        } else {
            System.out.println("Ошибка: общие секретные ключи не совпадают."); // Вывод сообщения об ошибке
        }

        scanner.close(); // Закрытие сканнера
    }
}
