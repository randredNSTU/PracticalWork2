#include <iostream>

using namespace std;

// Функция для вычисления возведения числа в степень по модулю
int modPow(int base, int exp, int mod) {
    int result = 1; // Инициализация результата
    base %= mod; // Получение остатка от деления базы на модуль
    while (exp > 0) { // Цикл, выполняющийся, пока показатель степени больше нуля
        if (exp % 2 == 1) { // Проверка на нечетность показателя степени
            result = (result * base) % mod; // Обновление результата
        }
        base = (base * base) % mod; // Обновление базы
        exp /= 2; // Уменьшение показателя степени в два раза
    }
    return result; // Возврат результата
}

int main() {
    // Шаг 1: Генерация общих параметров
    int p, g; // Объявление переменных для простого числа p и примитивного корня g
    cout << "Введите простое число p: "; // Вывод на экран запроса ввода простого числа p
    cin >> p; // Ввод значения простого числа p
    cout << "Введите примитивный корень по модулю p (g): "; // Вывод на экран запроса ввода примитивного корня g
    cin >> g; // Ввод значения примитивного корня g

    // Шаг 2: Генерация секретных ключей
    int a, b; // Объявление переменных для секретных ключей Alice и Bob
    cout << "Alice: Введите свой секретный ключ a: "; // Вывод на экран запроса ввода секретного ключа Alice
    cin >> a; // Ввод значения секретного ключа Alice
    cout << "Bob: Введите свой секретный ключ b: "; // Вывод на экран запроса ввода секретного ключа Bob
    cin >> b; // Ввод значения секретного ключа Bob

    // Шаг 3: Вычисление открытых ключей
    int A = modPow(g, a, p); // Вычисление открытого ключа Alice
    int B = modPow(g, b, p); // Вычисление открытого ключа Bob

    // Шаг 4: Обмен и вычисление общего секретного ключа
    int secretKeyA = modPow(B, a, p); // Вычисление общего секретного ключа Alice
    int secretKeyB = modPow(A, b, p); // Вычисление общего секретного ключа Bob

    // Проверка совпадения общих секретных ключей
    if (secretKeyA == secretKeyB) { // Проверка совпадения общих секретных ключей Alice и Bob
        cout << "Alice и Bob согласовали общий секретный ключ: " << secretKeyA << endl; // Вывод сообщения о согласовании общего секретного ключа
    } else {
        cout << "Ошибка: общие секретные ключи не совпадают." << endl; // Вывод сообщения об ошибке
    }

    return 0; // Возврат нуля, сигнализирующего об успешном завершении программы
}
